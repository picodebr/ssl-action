name: ssl action

description: Installation and renew of the SSL certificates with certbot

inputs:
  ssh_key:
    description: ssh private key
    required: true

  ssh_user:
    description: remote host username
    required: true

  ssh_host:
    descrition: remote host address
    required: true

  certificate_address:
    description: URL to emit certificate
    required: true

  email:
    description: email from address owner
    required: true

  certbot_folder:
    description: path where the certbot folder resides
    required: false
    default: ~/app/production/certbot

  install_condition:
    description: bash condition for the ssl certificate be installed
    required: false
    default: $(which docker)

  run_on_success:
    descripton: bash command to run after installing the certificate
    required: false
    default: echo "no after install command"

runs:
  using: composite
  steps:
    - name: Connect to server
      uses: picodebr/ssh-action@v1.2
      with:
        ssh_host: ${{ inputs.ssh_host }}
        ssh_user: ${{ inputs.ssh_user }}
        ssh_key: ${{ inputs.ssh_key }}
        command: |
          if [ ${{ inputs.install_condition }} ]; then
            echo "Installing SSL certificate."

            cd ${{ inputs.certbot_folder }}

            (docker run --rm \
              --volume "$(pwd)/www:/var/www/html:rw" \
              --volume "$(pwd)/certificate:/etc/letsencrypt:rw" \
              certbot/certbot:latest certonly --webroot -w /var/www/html \
              -d ${{ inputs.certificate_address }} --agree-tos \
              --email ${{ inputs.email }} -n) && (${{ inputs.run_on_success }})

            # renew certificate every month
            CRONJOBS_COUNT=`crontab -l | grep -ci ""`
            MATCHED_COUNT=`crontab -l | -ci "certbot/certificate"`

            if [ $MATCHED_COUNT == 0 ]; then
              if [ $CRONJOBS_COUNT == 0 ]; then
                echo "0 0 1 * * docker run --rm --volume \"$(pwd)/www:/var/www/html:rw\" --volume \"$(pwd)/certificate:/etc/letsencrypt:rw\" certbot/certbot:latest certonly --webroot -w /var/www/html -d ${{ inputs.certificate_address }} --agree-tos --email ${{ inputs.email }} -n" | crontab -
              else
                (crontab -l && echo "0 0 1 * * docker run --rm --volume \"$(pwd)/www:/var/www/html:rw\" --volume \"$(pwd)/certificate:/etc/letsencrypt:rw\" certbot/certbot:latest certonly --webroot -w /var/www/html -d ${{ inputs.certificate_address }} --agree-tos --email ${{ inputs.email }} -n") | crontab -
              fi
            else
              echo "cronjob to renew certificate already exists"
            fi

            echo "SSL certificate installed."
          else
            echo "SSL certificate installation skipped."
          fi
